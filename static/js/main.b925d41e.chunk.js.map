{"version":3,"sources":["components/Details/styles.js","constans/categories.js","useTransactions.js","components/Details/Details.js","styles.js","components/Main/styles.js","components/Main/Form/styles.js","redux/list/listTypes.js","redux/list/listActions.js","utils/formaDate.js","components/Snackbar/styles.js","components/Snackbar/Snackbar.js","components/Main/Form/Form.js","constans/sortValues.js","components/Main/List/styles.js","components/Main/List/List.js","components/Main/Main.js","redux/list/listReducer.js","redux/rootReducer.js","redux/store.js","App.js","index.js"],"names":["makeStyles","income","borderBottom","expense","incomeColors","expenseColors","incomeCategories","type","amount","color","expenseCategories","useTransactions","list","title","forEach","c","transactionsPerType","filter","t","total","reduce","acc","currVal","categories","category","find","filteredCategories","chartData","datasets","data","map","backgroundColor","labels","connect","state","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","desktop","breakpoints","up","display","mobile","down","main","paddingBottom","last","marginBottom","spacing","grid","margin","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","radioGroup","justifyContent","button","marginTop","REMOVE_ITEM","ADD_TRANSACTION","SORT_TRANSACTIONS","sortTransactions","payload","formatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","root","width","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","saverity","elevation","initialState","sortVal","sort","dispatch","addTransactionToList","trans","sortV","useState","formData","setFormData","selectedCategories","segment","useSpeechContext","validateForm","useEffect","intent","console","log","isFinal","entities","e","value","charAt","slice","toLowerCase","isNaN","iC","includes","eC","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","TextField","label","Button","onClick","disabled","sortValues","avatarIncome","green","avatarExpense","palette","getContrastText","red","maxHeight","overflow","background","removeItem","id","el","dense","transaction","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","LocalAtm","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","balance","currValue","subheader","varian","style","lineHeight","Divider","JSON","parse","localStorage","getItem","listReducer","action","setItem","stringify","uuidv4","sortBy","rootReducer","combineReducers","store","createStore","App","alignItems","justify","sm","lg","gradientStops","size","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.b925d41e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n    income: {\r\n        borderBottom: '10px solid rgba(0, 255, 0, 0.5)',\r\n    },\r\n    expense: {\r\n        borderBottom: '10px solid rgba(255, 0, 0, 0.5)',\r\n    },\r\n}));\r\n","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import { incomeCategories, expenseCategories, resetCategories} from './constans/categories'\r\n\r\nconst useTransactions = (list, title) => {\r\n    resetCategories()\r\n    const transactionsPerType = list.filter(t => t.type === title)\r\n    const total = transactionsPerType.reduce((acc, currVal) => acc += currVal.amount, 0)\r\n    const categories = title === 'Income' ? incomeCategories : expenseCategories\r\n\r\n    transactionsPerType.forEach(t => {\r\n        const category = categories.find(c => c.type === t.category)\r\n        if (category) category.amount += t.amount\r\n    })\r\n    \r\n    const filteredCategories = categories.filter(c => c.amount > 0)\r\n\r\n    const chartData = {\r\n        datasets: [{\r\n            data: filteredCategories.map(c => c.amount),\r\n            backgroundColor: filteredCategories.map(c => c.color)\r\n        }],\r\n        labels: filteredCategories.map(c => c.type)\r\n    }\r\n        \r\n    return { total, chartData}\r\n}\r\n\r\nexport default useTransactions","import React from 'react'\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nimport useStyles from './styles'\r\nimport { connect } from 'react-redux'\r\nimport useTransactions from '../../useTransactions'\r\n\r\nconst Details = ({ title, list }) => {\r\n    const classes = useStyles();\r\n\r\n    const { total, chartData} = useTransactions(list, title)\r\n\r\n    return (\r\n        <div>\r\n            <Card className={title === 'Income' ? classes.income : classes.expense}>\r\n                <CardHeader title={title} />\r\n                <CardContent>\r\n                    <Typography variant='h5'>${total}</Typography>\r\n                    <Doughnut data={chartData} />\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.list.list\r\n})\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Details)\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n}));","export const REMOVE_ITEM = 'REMOVE_ITEM'\r\nexport const ADD_TRANSACTION = 'ADD_TRANSACTION'\r\nexport const SORT_TRANSACTIONS = 'SORT_TRANSACTIONS'","import { ADD_TRANSACTION, REMOVE_ITEM, SORT_TRANSACTIONS } from \"./listTypes\";\r\n\r\nexport const removeItem = id => ({\r\n    type: REMOVE_ITEM,\r\n    payload: id\r\n})\r\n\r\nexport const addTransaction = transaction => ({\r\n    type: ADD_TRANSACTION,\r\n    payload: transaction\r\n})\r\n\r\nexport const sortTransactions = payload => ({\r\n    type: SORT_TRANSACTIONS,\r\n    payload: payload\r\n})","const formatDate = date => {\r\n    const d = new Date(date);\r\n    let month = `${d.getMonth() + 1}`\r\n    let day = `${d.getDate()}`\r\n    const year = d.getFullYear()\r\n\r\n    if(month.length < 2) {\r\n        month = `0${month}`\r\n    }\r\n\r\n    if(day.length < 2) {\r\n        day = `0${day}`\r\n    }\r\n\r\n    return [year, month, day].join('-')\r\n\r\n}\r\n\r\nexport default formatDate;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\n\r\nimport useStyles from './styles'\r\n\r\nconst CustomizedSnackbar = ({ open, setOpen }) => {\r\n\r\n    const classes = useStyles()\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') return;\r\n        setOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={open}\r\n                autoHideDuration={3000}\r\n                onClose={handleClose}\r\n            >\r\n                <MuiAlert onClose={handleClose} saverity='success' elevation={6} variant='filled'>\r\n                    Transaction successefully created\r\n                </MuiAlert>\r\n            </Snackbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedSnackbar","import React, { useState, useEffect } from 'react'\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { useSpeechContext } from '@speechly/react-client'\r\n\r\nimport useStyles from './styles'\r\nimport { connect } from 'react-redux'\r\nimport { addTransaction, sortTransactions } from '../../../redux'\r\nimport { incomeCategories, expenseCategories } from '../../../constans/categories'\r\nimport formatDate from '../../../utils/formaDate'\r\nimport CustomizedSnackbar from '../../Snackbar/Snackbar'\r\n\r\n\r\nconst initialState = {\r\n    amount: '',\r\n    category: '',\r\n    type: 'Income',\r\n    date: formatDate(new Date()),\r\n}\r\n\r\n\r\nconst Form = ({ addTransactionToList, sortVal, sortTransactions }) => {\r\n    const classes = useStyles()\r\n    const [formData, setFormData] = useState(initialState)\r\n    const [open, setOpen] = useState(false)\r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    const { segment } = useSpeechContext();\r\n\r\n    const validateForm = formData.category && formData.amount && formData.date;\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n            if (segment.intent.intent === 'add_expense') {\r\n                console.log('add expense')\r\n                setFormData({\r\n                    ...formData,\r\n                    type: 'Expense'\r\n                })\r\n            } else if (segment.intent.intent === 'add_income') {\r\n                setFormData({\r\n                    ...formData,\r\n                    type: 'Income'\r\n                })\r\n            } else if (segment.intent.intent === 'create_transaction' && segment.isFinal && validateForm) {\r\n                addTransactionToList(formData)\r\n                sortTransactions(sortVal)\r\n            } else if (segment.intent.intent === 'cancel_transaction' && segment.isFinal) {\r\n                return setFormData(initialState)\r\n            }\r\n            segment.entities.forEach(e => {\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\r\n                switch (e.type) {\r\n                    case 'amount':\r\n                        setFormData({ ...formData, amount: e.value < 0 || isNaN(e.value) ? 0 : +e.value })\r\n                        break\r\n                    case 'category':\r\n                        if (incomeCategories.map(iC => iC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Income', category: category })\r\n                        } else if (expenseCategories.map(eC => eC.type).includes(category)) {\r\n                            setFormData({ ...formData, type: 'Expense', category: category })\r\n                        }\r\n                        break\r\n                    case 'date':\r\n                        setFormData({ ...formData, date: e.value })\r\n                        break\r\n                }\r\n            })\r\n            if (validateForm && segment.isFinal && segment.intent.intent !== 'sort_by' && segment.intent.intent !== 'create_transaction') {\r\n                addTransactionToList(formData)\r\n                sortTransactions(sortVal)\r\n            }\r\n        }\r\n    }, [segment])\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n        >\r\n            <CustomizedSnackbar open={open} setOpen={setOpen} />\r\n            <Grid item xs={12}>\r\n                <Typography align='center' variant='subtitle2' gutterBottom>\r\n                    {segment && segment.words.map(w => w.value).join(' ')}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select value={formData.type} onChange={e => setFormData({\r\n                        ...formData,\r\n                        type: e.target.value,\r\n                        category: initialState.category\r\n                    })}>\r\n                        <MenuItem value='Income'>Income</MenuItem>\r\n                        <MenuItem value='Expense'>Expense</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value={formData.category} onChange={e => setFormData({\r\n                        ...formData,\r\n                        category: e.target.value\r\n                    })}>\r\n                        {selectedCategories.map(c => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField value={formData.amount} onChange={e => setFormData({\r\n                    ...formData,\r\n                    amount: +e.target.value < 0 ? 0 : +e.target.value\r\n                })} type='number' label='Amount' fullWidth />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <TextField value={formData.date} onChange={e => setFormData({\r\n                    ...formData,\r\n                    date: formatDate(e.target.value)\r\n                })} type='date' label='Date' fullWidth />\r\n            </Grid>\r\n            <Button className={classes.button} onClick={() => {\r\n                setOpen(true)\r\n                addTransactionToList(formData)\r\n                sortTransactions(sortVal)\r\n            }} variant='outlined' color='primary' fullWidth disabled={validateForm ? false : true}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    sortVal: state.list.sort.type\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTransactionToList: trans => dispatch(addTransaction(trans)),\r\n    sortTransactions: sortV => dispatch(sortTransactions(sortV))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Form)\r\n","export const sortValues = [\r\n    'amount',\r\n    'type',\r\n    'category',\r\n    'date'\r\n]","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n    background: 'white'\r\n  },\r\n}));","import React, { useEffect } from 'react'\r\nimport { List as MUIList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide, Card, CardHeader, CardContent, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core'\r\nimport { Delete, MoneyOff, LocalAtm } from '@material-ui/icons'\r\nimport { sortValues } from '../../../constans/sortValues'\r\nimport { useSpeechContext } from '@speechly/react-client'\r\n\r\nimport useStyles from './styles'\r\nimport { removeItem, sortTransactions } from '../../../redux'\r\nimport { connect } from 'react-redux'\r\n\r\nconst List = ({ list, removeItem, sortTransactions, sortVal }) => {\r\n    const classes = useStyles()\r\n\r\n    const {segment} = useSpeechContext()\r\n\r\n    useEffect(() => {\r\n        if (segment) {\r\n             if (segment.intent.intent === 'sort_by' && segment.isFinal) {\r\n                 const sortV = segment.entities[0].value.toLowerCase()\r\n                 sortTransactions(sortV)\r\n             }\r\n        }\r\n    }, [segment])\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title='Transactions list' />\r\n            <FormControl fullWidth>\r\n                <InputLabel>Sort by</InputLabel>\r\n                <Select value={sortVal}  onChange={e => sortTransactions(e.target.value)}>\r\n                    {\r\n                        sortValues.map(el =>\r\n                            <MenuItem key={el} value={el}>{el}</MenuItem>)\r\n                    }\r\n                </Select>\r\n            </FormControl>\r\n            <CardContent>\r\n                <MUIList dense={false} className={classes.list}>\r\n                    {list.map(transaction => (\r\n                        <Slide direction='down' in mountOnEnter unmountOnExit key={transaction.id}>\r\n                            <ListItem>\r\n                                <ListItemAvatar>\r\n                                    <Avatar className={transaction.type === 'Income' ? classes.avatarIncome : classes.avatarExpense}>\r\n                                        {\r\n                                            transaction.type === 'Income' ?\r\n                                                <LocalAtm /> :\r\n                                                <MoneyOff />\r\n                                        }\r\n                                    </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText primary={transaction.category} secondary={`${transaction.amount} - ${transaction.date}`} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton edge='end' aria-label='delete' onClick={() => removeItem(transaction.id)}>\r\n                                        <Delete />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                        </Slide>\r\n                    ))}\r\n                </MUIList>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.list.list,\r\n    sortVal: state.list.sort.type\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeItem: id => dispatch(removeItem(id)),\r\n    sortTransactions: sortV => dispatch(sortTransactions(sortV))\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(List)\r\n","import React from 'react'\r\nimport { Card, CardHeader, CardContent, Typography, Grid, Divider } from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\nimport Form from './Form/Form'\r\nimport List from './List/List'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Main = ({ list }) => {\r\n    const classes = useStyles()\r\n    const balance = list.reduce((acc, currValue) => {\r\n        return currValue.type === 'Income' ? acc + currValue.amount : acc - currValue.amount\r\n    }, 0)\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader title='Expense tracker' subheader='Powered by ...' />\r\n            <CardContent>\r\n                <Typography align='center' varian='h5'>Total Balance {balance}</Typography>\r\n                <Typography variant='subtitle1' style={{ lineHeight: '1.5em', marginTop: '20px' }}>\r\n                    Try saying: Add income for 100$ in Category Salary for Monday ...\r\n                </Typography>\r\n                <Divider />\r\n                <Form />\r\n            </CardContent>\r\n            {/* <CardContent className={classes.cardContent}>\r\n                <List />\r\n            </CardContent> */}\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    list: state.list.list\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Main)\r\n","import { ADD_TRANSACTION, REMOVE_ITEM, SORT_TRANSACTIONS } from \"./listTypes\"\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { sortBy } from 'lodash';\r\n\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) ? {\r\n    list: JSON.parse(localStorage.getItem('transactions')),\r\n    sort: {\r\n        type: 'amount'\r\n    }\r\n} : {\r\n    list: [\r\n        { \"id\": \"de8fa74d-528d-4bce-bd63-a3e813078b24\", \"type\": \"Income\", \"category\": \"Extra income\", \"amount\": 30, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"5ba44256-0b30-4ffa-b409-0462e95395e5\", \"type\": \"Income\", \"category\": \"Gifts\", \"amount\": 150, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"4af3265d-3d5f-44b6-b8dd-eafbcd46effd\", \"type\": \"Income\", \"category\": \"Investments\", \"amount\": 50, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"e1de55ad-38ac-42eb-8330-933cb260ae34\", \"type\": \"Income\", \"category\": \"Savings\", \"amount\": 50, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"8e6024d6-1161-4b78-8548-f7769e80ba85\", \"type\": \"Expense\", \"category\": \"Shopping\", \"amount\": 50, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"054c7313-5ca6-47c3-bd86-dadd28c75e97\", \"type\": \"Expense\", \"category\": \"Pets\", \"amount\": 50, \"date\": \"2021-04-24\" },\r\n        { \"id\": \"aa1a1fcd-7d90-4271-9f18-3ebd453a8de6\", \"type\": \"Expense\", \"category\": \"Travel\", \"amount\": 30, \"date\": \"2021-04-24\" }\r\n    ],\r\n    sort: {\r\n        type: 'amount'\r\n    }}\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case REMOVE_ITEM: {\r\n            const list = state.list.filter((item) => action.payload !== item.id)\r\n            localStorage.setItem('transactions', JSON.stringify(list))\r\n            return {\r\n                ...state,\r\n                list\r\n            }\r\n        }\r\n        case ADD_TRANSACTION: {\r\n            const list = [...state.list, {\r\n                id: uuidv4(),\r\n                type: action.payload.type,\r\n                category: action.payload.category,\r\n                amount: action.payload.amount,\r\n                date: action.payload.date\r\n            }]\r\n            localStorage.setItem('transactions', JSON.stringify(list))\r\n            return {\r\n                ...state,\r\n                list\r\n            }\r\n        }\r\n        case SORT_TRANSACTIONS: {\r\n            const list = sortBy(state.list, [action.payload])\r\n            const sort = {type: action.payload}\r\n            console.log(sort)\r\n            localStorage.setItem('transactions', JSON.stringify(list))\r\n            return {\r\n                ...state,\r\n                sort,\r\n                list\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default listReducer","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./list/listReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    list: listReducer\r\n})\r\n\r\nexport default rootReducer","import { createStore } from \"redux\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react'\r\nimport Details from './components/Details/Details'\r\nimport { Grid } from '@material-ui/core'\r\n\r\nimport useStyles from './styles'\r\nimport Main from './components/Main/Main'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport { PushToTalkButtonContainer, PushToTalkButton, ErrorPanel } from '@speechly/react-ui'\r\nimport List from './components/Main/List/List'\r\n\r\nconst App = () => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Provider store={store}>\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                alignItems='center'\r\n                justify='center'\r\n                className={classes.grid}\r\n                style={{ height: '100vh' }}\r\n            >\r\n                <Grid item xs={12} sm={12} lg={4}>\r\n                    <Main />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} lg={3}>\r\n                    <List />\r\n                </Grid>\r\n                <Grid item xs={12} sm={10} lg={4}>\r\n                    <Grid item xs={12} sm={12} lg={10}>\r\n                        <Details title='Income' />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={12} lg={10}>\r\n                        <Details title='Expense' />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <PushToTalkButtonContainer>\r\n                <PushToTalkButton gradientStops={[\"#4caf50\", \"#f44336\"]} size=\"5rem\"/>\r\n                <ErrorPanel />\r\n            </PushToTalkButtonContainer>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { SpeechProvider} from '@speechly/react-client'\r\n\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <SpeechProvider appId='e5b2eac9-9c45-4bef-8673-85737349371c' language='en-US'>\r\n        <App />\r\n    </SpeechProvider>, document.getElementById('root'))"],"sourceRoot":""}